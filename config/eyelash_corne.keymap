#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        AE {
            bindings = <&kp SINGLE_QUOTE>;
            key-positions = <8 9 10>;
        };

        UE {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <37 38 39>;
        };

        Fragezeichen {
            bindings = <&kp QUESTION>;
            key-positions = <8 9>;
        };

        EssZett {
            bindings = <&kp MINUS>;
            key-positions = <4 3 2>;
        };

        Ausrufeyeichen {
            bindings = <&kp EXCLAMATION>;
            key-positions = <4 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTZ";
            bindings = <
&mt ESCAPE TAB  &kp Q  &kp W  &kp E     &kp R         &kp T                             &kp UP                &kp Y        &kp U  &kp I                 &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F         &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J  &kp K                 &kp L    &kp SEMI  &kp RSHIFT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V         &kp B        &kp ESC              &kp DOWN              &kp N        &kp M  &kp COMMA             &kp DOT  &kp FSLH  &kp ENTER
                              &kp LGUI  &kp LEFT_ALT  &lt 1 SPACE                                             &lt 3 SPACE  &mo 2  &kp LA(LEFT_CONTROL)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp TAB           &trans  &kp NUMBER_7  &kp N8        &kp N9        &kp MINUS                                &mmv MOVE_UP                     &trans     &trans          &kp UP_ARROW          &trans             &trans    &kp BSPC
&kp LEFT_SHIFT    &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp EQUAL                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans     &kp LEFT_ARROW  &kp DOWN_ARROW        &kp RIGHT          &kp HOME  &trans
&kp LEFT_CONTROL  &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &kp C_MUTE                    &mmv MOVE_DOWN                   &trans     &kp BACKSLASH   &kp NON_US_BACKSLASH  &kp RIGHT_BRACKET  &kp END   &kp ENTER
                                        &trans        &kp LEFT_WIN  &trans                                                                    &kp SPACE  &trans          &kp LA(LEFT_CONTROL)
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&trans  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans     &trans     &kp SPACE                                                             &kp RET    &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &trans  &kp F7  &kp F8  &kp F9  &kp F10                                &mmv MOVE_UP                     &bt BT_SEL 0    &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans
&trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bt BT_CLR      &trans           &trans           &trans           &trans           &bt BT_CLR_ALL
&trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans
                        &trans  &trans  &trans                                                                  &trans          &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
